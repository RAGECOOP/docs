{
  "api/RageCoop.Client.CoopProp.html": {
    "href": "api/RageCoop.Client.CoopProp.html",
    "title": "Struct CoopProp | RageCoop resource documentation",
    "keywords": "Struct CoopProp Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : RageCoop.Client Assembly : RageCoop.Client.dll Syntax public struct CoopProp Properties Dynamic Declaration public bool Dynamic { get; set; } Property Value Type Description Boolean Hash Declaration public int Hash { get; set; } Property Value Type Description Int32 Position Declaration public Vector3 Position { get; set; } Property Value Type Description GTA.Math.Vector3 Rotation Declaration public Vector3 Rotation { get; set; } Property Value Type Description GTA.Math.Vector3 Texture Declaration public int Texture { get; set; } Property Value Type Description Int32"
  },
  "api/RageCoop.Client.html": {
    "href": "api/RageCoop.Client.html",
    "title": "Namespace RageCoop.Client | RageCoop resource documentation",
    "keywords": "Namespace RageCoop.Client Classes Map Settings Don't use it! SyncedEntity SyncedPed ? SyncedProp Synchronized prop, mostly owned by server SyncedVehicle A synchronized vehicle instance WorldThread Don't use it! Structs CoopProp"
  },
  "api/RageCoop.Client.Map.html": {
    "href": "api/RageCoop.Client.Map.html",
    "title": "Class Map | RageCoop resource documentation",
    "keywords": "Class Map Inheritance Object Map Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client Assembly : RageCoop.Client.dll Syntax public class Map Properties Props Declaration public List<CoopProp> Props { get; set; } Property Value Type Description List < CoopProp >"
  },
  "api/RageCoop.Client.Scripting.API.Config.html": {
    "href": "api/RageCoop.Client.Scripting.API.Config.html",
    "title": "Class API.Config | RageCoop resource documentation",
    "keywords": "Class API.Config Client configuration, this will conflict with server-side config. Inheritance Object API.Config Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client.Scripting Assembly : RageCoop.Client.dll Syntax public static class Config Properties BlipColor Get or set player's blip color Declaration public static BlipColor BlipColor { get; set; } Property Value Type Description GTA.BlipColor BlipScale Get or set scale of player's blip Declaration public static float BlipScale { get; set; } Property Value Type Description Single BlipSprite Get or set player's blip sprite Declaration public static BlipSprite BlipSprite { get; set; } Property Value Type Description GTA.BlipSprite EnableAutoRespawn Enable automatic respawn for this player. Declaration public static bool EnableAutoRespawn { get; set; } Property Value Type Description Boolean Username Get or set local player's username, set won't be effective if already connected to a server. Declaration public static string Username { get; set; } Property Value Type Description String"
  },
  "api/RageCoop.Client.Scripting.API.Events.CustomEvent.html": {
    "href": "api/RageCoop.Client.Scripting.API.Events.CustomEvent.html",
    "title": "Delegate API.Events.CustomEvent | RageCoop resource documentation",
    "keywords": "Delegate API.Events.CustomEvent Namespace : RageCoop.Client.Scripting Assembly : RageCoop.Client.dll Syntax public delegate void CustomEvent(int hash, List<object> args); Parameters Type Name Description Int32 hash List < Object > args"
  },
  "api/RageCoop.Client.Scripting.API.Events.EmptyEvent.html": {
    "href": "api/RageCoop.Client.Scripting.API.Events.EmptyEvent.html",
    "title": "Delegate API.Events.EmptyEvent | RageCoop resource documentation",
    "keywords": "Delegate API.Events.EmptyEvent Namespace : RageCoop.Client.Scripting Assembly : RageCoop.Client.dll Syntax public delegate void EmptyEvent();"
  },
  "api/RageCoop.Client.Scripting.API.Events.html": {
    "href": "api/RageCoop.Client.Scripting.API.Events.html",
    "title": "Class API.Events | RageCoop resource documentation",
    "keywords": "Class API.Events Base events for RageCoop Inheritance Object API.Events Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client.Scripting Assembly : RageCoop.Client.dll Syntax public static class Events Events OnPedDeleted A local ped is deleted Declaration public static event EventHandler<SyncedPed> OnPedDeleted Event Type Type Description EventHandler < SyncedPed > OnPedSpawned A local ped is spawned Declaration public static event EventHandler<SyncedPed> OnPedSpawned Event Type Type Description EventHandler < SyncedPed > OnPlayerDied The local player is dead Declaration public static event API.Events.EmptyEvent OnPlayerDied Event Type Type Description API.Events.EmptyEvent OnTick This is equivalent of GTA.Script.Tick . Declaration public static event API.Events.EmptyEvent OnTick Event Type Type Description API.Events.EmptyEvent OnVehicleDeleted A local vehicle is deleted Declaration public static event EventHandler<SyncedVehicle> OnVehicleDeleted Event Type Type Description EventHandler < SyncedVehicle > OnVehicleSpawned A local vehicle is spawned Declaration public static event EventHandler<SyncedVehicle> OnVehicleSpawned Event Type Type Description EventHandler < SyncedVehicle >"
  },
  "api/RageCoop.Client.Scripting.API.html": {
    "href": "api/RageCoop.Client.Scripting.API.html",
    "title": "Class API | RageCoop resource documentation",
    "keywords": "Class API Provides vital functionality to interact with RAGECOOP Inheritance Object API Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client.Scripting Assembly : RageCoop.Client.dll Syntax public static class API Properties CurrentVersion Get the version of RAGECOOP Declaration public static string CurrentVersion { get; } Property Value Type Description String IsChatFocused Check if the RAGECOOP chat is visible Declaration public static bool IsChatFocused { get; } Property Value Type Description Boolean IsMenuVisible Check if a RAGECOOP menu is visible Declaration public static bool IsMenuVisible { get; } Property Value Type Description Boolean IsOnServer Check if the player is already on a server Declaration public static bool IsOnServer { get; } Property Value Type Description Boolean IsPlayerListVisible Check if the RAGECOOP list of players is visible Declaration public static bool IsPlayerListVisible { get; } Property Value Type Description Boolean LocalPlayerID Get the local player's ID Declaration public static int LocalPlayerID { get; } Property Value Type Description Int32 PlayerID Logger Get a Logger that RAGECOOP is currently using. Declaration public static Logger Logger { get; } Property Value Type Description Logger Methods Disconnect() Disconnect from the server Declaration public static void Disconnect() LocalChatMessage(String, String) Send a local chat message to this player Declaration public static void LocalChatMessage(string from, string message) Parameters Type Name Description String from Name of the sender String message The player's message QueueAction(Action) Queue an action to be executed on next tick. Declaration public static void QueueAction(Action a) Parameters Type Name Description Action a RegisterCustomEventHandler(Int32, Action<CustomEventReceivedArgs>) Register an handler to the specifed event hash, one event can have multiple handlers. This will be invoked from backgound thread, use QueueAction(Action) in the handler to dispatch code to script thread. Declaration public static void RegisterCustomEventHandler(int hash, Action<CustomEventReceivedArgs> handler) Parameters Type Name Description Int32 hash An unique identifier of the event, you can hash your event name with Hash(String) Action < CustomEventReceivedArgs > handler An handler to be invoked when the event is received from the server. SendCustomEvent(Int32, Object[]) Send an event and data to the server. Declaration public static void SendCustomEvent(int eventHash, params object[] args) Parameters Type Name Description Int32 eventHash An unique identifier of the event Object [] args The objects conataing your data, see CustomEventReceivedArgs for a list of supported types"
  },
  "api/RageCoop.Client.Scripting.ClientResource.html": {
    "href": "api/RageCoop.Client.Scripting.ClientResource.html",
    "title": "Class ClientResource | RageCoop resource documentation",
    "keywords": "Class ClientResource Inheritance Object ClientResource Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client.Scripting Assembly : RageCoop.Client.dll Syntax public class ClientResource Properties DataFolder A resource-specific folder that can be used to store your files. Declaration public string DataFolder { get; } Property Value Type Description String Files Get the ResourceFile where this script is loaded from. Declaration public Dictionary<string, ResourceFile> Files { get; } Property Value Type Description Dictionary < String , ResourceFile > Name Name of the resource Declaration public string Name { get; } Property Value Type Description String Scripts Get all ClientScript instance in this resource. Declaration public List<ClientScript> Scripts { get; } Property Value Type Description List < ClientScript >"
  },
  "api/RageCoop.Client.Scripting.ClientScript.html": {
    "href": "api/RageCoop.Client.Scripting.ClientScript.html",
    "title": "Class ClientScript | RageCoop resource documentation",
    "keywords": "Class ClientScript Inherit from this class, constructor will be called automatically, but other scripts might have yet been loaded, you should use OnStart() . to initiate your script. Inheritance Object ClientScript Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client.Scripting Assembly : RageCoop.Client.dll Syntax public abstract class ClientScript Properties CurrentFile Get the ResourceFile instance where this script is loaded from. Declaration public ResourceFile CurrentFile { get; } Property Value Type Description ResourceFile CurrentResource Get the ClientResource that this script belongs to. Declaration public ClientResource CurrentResource { get; } Property Value Type Description ClientResource Methods OnStart() This method would be called from background thread, call QueueAction(Action) to dispatch it to main thread. Declaration public abstract void OnStart() OnStop() This method would be called from background thread when the client disconnected from the server, you MUST terminate all background jobs/threads in this method. Declaration public abstract void OnStop()"
  },
  "api/RageCoop.Client.Scripting.CustomEventReceivedArgs.html": {
    "href": "api/RageCoop.Client.Scripting.CustomEventReceivedArgs.html",
    "title": "Class CustomEventReceivedArgs | RageCoop resource documentation",
    "keywords": "Class CustomEventReceivedArgs Inheritance Object EventArgs CustomEventReceivedArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client.Scripting Assembly : RageCoop.Client.dll Syntax public class CustomEventReceivedArgs : EventArgs Properties Args Supported types: byte, short, ushort, int, uint, long, ulong, float, bool, string, Vector3, Quaternion Declaration public object[] Args { get; set; } Property Value Type Description Object [] Hash The event hash Declaration public int Hash { get; set; } Property Value Type Description Int32"
  },
  "api/RageCoop.Client.Scripting.html": {
    "href": "api/RageCoop.Client.Scripting.html",
    "title": "Namespace RageCoop.Client.Scripting | RageCoop resource documentation",
    "keywords": "Namespace RageCoop.Client.Scripting Classes API Provides vital functionality to interact with RAGECOOP API.Config Client configuration, this will conflict with server-side config. API.Events Base events for RageCoop ClientResource ClientScript Inherit from this class, constructor will be called automatically, but other scripts might have yet been loaded, you should use OnStart() . to initiate your script. CustomEventReceivedArgs Delegates API.Events.CustomEvent API.Events.EmptyEvent"
  },
  "api/RageCoop.Client.Settings.html": {
    "href": "api/RageCoop.Client.Settings.html",
    "title": "Class Settings | RageCoop resource documentation",
    "keywords": "Class Settings Don't use it! Inheritance Object Settings Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client Assembly : RageCoop.Client.dll Syntax public class Settings Fields LogLevel LogLevel for RageCoop. 0:Trace, 1:Debug, 2:Info, 3:Warning, 4:Error Declaration public int LogLevel Field Value Type Description Int32 Properties DataDirectory The directory where log and resources downloaded from server will be placed. Declaration public string DataDirectory { get; set; } Property Value Type Description String DisableAlternatePause Bring up pause menu but don't freeze time when FrontEndPauseAlternate(Esc) is pressed. Declaration public bool DisableAlternatePause { get; set; } Property Value Type Description Boolean DisableTraffic Disable world NPC traffic, mission entities won't be affected Declaration public bool DisableTraffic { get; set; } Property Value Type Description Boolean FlipMenu Don't use it! Declaration public bool FlipMenu { get; set; } Property Value Type Description Boolean LastServerAddress Don't use it! Declaration public string LastServerAddress { get; set; } Property Value Type Description String MasterServer Don't use it! Declaration public string MasterServer { get; set; } Property Value Type Description String MenuKey The key to open menu Declaration public Keys MenuKey { get; set; } Property Value Type Description Keys PassengerKey The key to enter a vehicle as passenger. Declaration public Keys PassengerKey { get; set; } Property Value Type Description Keys Password The password used to authenticate when connecting to a server. Declaration public string Password { get; set; } Property Value Type Description String Username Don't use it! Declaration public string Username { get; set; } Property Value Type Description String WorldPedSoftLimit The game won't spawn more NPC traffic if the limit is exceeded. -1 for unlimited (not recommended). Declaration public int WorldPedSoftLimit { get; set; } Property Value Type Description Int32 WorldVehicleSoftLimit The game won't spawn more NPC traffic if the limit is exceeded. -1 for unlimited (not recommended). Declaration public int WorldVehicleSoftLimit { get; set; } Property Value Type Description Int32"
  },
  "api/RageCoop.Client.SyncedEntity.html": {
    "href": "api/RageCoop.Client.SyncedEntity.html",
    "title": "Class SyncedEntity | RageCoop resource documentation",
    "keywords": "Class SyncedEntity Inheritance Object SyncedEntity SyncedPed SyncedProp SyncedVehicle Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client Assembly : RageCoop.Client.dll Syntax public abstract class SyncedEntity Fields _lastFrozen Declaration protected bool _lastFrozen Field Value Type Description Boolean Properties ID Network ID for this entity Declaration public int ID { get; } Property Value Type Description Int32 IsLocal Indicates whether the current player is responsible for syncing this entity. Declaration public bool IsLocal { get; } Property Value Type Description Boolean IsOutOfSync Declaration public bool IsOutOfSync { get; } Property Value Type Description Boolean LastStateSynced Last time a new sync message arrived. Declaration public ulong LastStateSynced { get; } Property Value Type Description UInt64 LastSynced Last time a new sync message arrived. Declaration public ulong LastSynced { get; set; } Property Value Type Description UInt64 LastUpdated Last time the local entity has been updated, Declaration public ulong LastUpdated { get; set; } Property Value Type Description UInt64 OwnerID Declaration public int OwnerID { get; } Property Value Type Description Int32"
  },
  "api/RageCoop.Client.SyncedPed.html": {
    "href": "api/RageCoop.Client.SyncedPed.html",
    "title": "Class SyncedPed | RageCoop resource documentation",
    "keywords": "Class SyncedPed ? Inheritance Object SyncedEntity SyncedPed Inherited Members SyncedEntity.IsLocal SyncedEntity.ID SyncedEntity.OwnerID SyncedEntity.IsOutOfSync SyncedEntity.LastSynced SyncedEntity.LastStateSynced SyncedEntity.LastUpdated SyncedEntity._lastFrozen Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client Assembly : RageCoop.Client.dll Syntax public class SyncedPed : SyncedEntity Properties IsPlayer Indicates whether this ped is a player Declaration public bool IsPlayer { get; } Property Value Type Description Boolean MainPed real entity Declaration public Ped MainPed { get; } Property Value Type Description GTA.Ped Speed The latest character rotation (may not have been applied yet) Declaration public byte Speed { get; set; } Property Value Type Description Byte"
  },
  "api/RageCoop.Client.SyncedProp.html": {
    "href": "api/RageCoop.Client.SyncedProp.html",
    "title": "Class SyncedProp | RageCoop resource documentation",
    "keywords": "Class SyncedProp Synchronized prop, mostly owned by server Inheritance Object SyncedEntity SyncedProp Inherited Members SyncedEntity.IsLocal SyncedEntity.ID SyncedEntity.OwnerID SyncedEntity.IsOutOfSync SyncedEntity.LastSynced SyncedEntity.LastStateSynced SyncedEntity.LastUpdated SyncedEntity._lastFrozen Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client Assembly : RageCoop.Client.dll Syntax public class SyncedProp : SyncedEntity Properties MainProp The real entity Declaration public Prop MainProp { get; set; } Property Value Type Description GTA.Prop"
  },
  "api/RageCoop.Client.SyncedVehicle.html": {
    "href": "api/RageCoop.Client.SyncedVehicle.html",
    "title": "Class SyncedVehicle | RageCoop resource documentation",
    "keywords": "Class SyncedVehicle A synchronized vehicle instance Inheritance Object SyncedEntity SyncedVehicle Inherited Members SyncedEntity.IsLocal SyncedEntity.ID SyncedEntity.OwnerID SyncedEntity.IsOutOfSync SyncedEntity.LastSynced SyncedEntity.LastStateSynced SyncedEntity.LastUpdated SyncedEntity._lastFrozen Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client Assembly : RageCoop.Client.dll Syntax public class SyncedVehicle : SyncedEntity Properties MainVehicle VehicleSeat,ID Declaration public Vehicle MainVehicle { get; } Property Value Type Description GTA.Vehicle"
  },
  "api/RageCoop.Client.WorldThread.html": {
    "href": "api/RageCoop.Client.WorldThread.html",
    "title": "Class WorldThread | RageCoop resource documentation",
    "keywords": "Class WorldThread Don't use it! Inheritance Object GTA.Script WorldThread Inherited Members GTA.Script.ToString() GTA.Script.GetRelativeFilePath(System.String) GTA.Script.Abort() GTA.Script.Pause() GTA.Script.Resume() GTA.Script.Wait(System.Int32) GTA.Script.Yield() GTA.Script.InstantiateScript<T>() GTA.Script.Name GTA.Script.Filename GTA.Script.BaseDirectory GTA.Script.IsPaused GTA.Script.IsRunning GTA.Script.IsExecuting GTA.Script.Settings GTA.Script.Interval GTA.Script.Tick GTA.Script.Aborted GTA.Script.KeyUp GTA.Script.KeyDown Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : RageCoop.Client Assembly : RageCoop.Client.dll Syntax public class WorldThread : Script Constructors WorldThread() Don't use it! Declaration public WorldThread()"
  },
  "api/RageCoop.Core.html": {
    "href": "api/RageCoop.Core.html",
    "title": "Namespace RageCoop.Core | RageCoop resource documentation",
    "keywords": "Namespace RageCoop.Core Classes Logger Worker A worker that constantly execute jobs in a background thread."
  },
  "api/RageCoop.Core.Logger.html": {
    "href": "api/RageCoop.Core.Logger.html",
    "title": "Class Logger | RageCoop resource documentation",
    "keywords": "Class Logger Inheritance Object Logger Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Core Assembly : RageCoop.Core.dll Syntax public class Logger : IDisposable Fields LogLevel 0:Trace, 1:Debug, 2:Info, 3:Warning, 4:Error Declaration public int LogLevel Field Value Type Description Int32 LogPath Path to log file. Declaration public string LogPath Field Value Type Description String UseConsole Whether to flush messages to console instead of log file Declaration public bool UseConsole Field Value Type Description Boolean Properties Name Name of this logger Declaration public string Name { get; set; } Property Value Type Description String Methods Debug(String) Declaration public void Debug(string message) Parameters Type Name Description String message Dispose() Stop backdround thread and flush all pending messages. Declaration public void Dispose() Error(Exception) Declaration public void Error(Exception ex) Parameters Type Name Description Exception ex Error(String) Declaration public void Error(string message) Parameters Type Name Description String message Error(String, Exception) Declaration public void Error(string message, Exception error) Parameters Type Name Description String message Exception error Flush() Declaration public void Flush() Info(String) Declaration public void Info(string message) Parameters Type Name Description String message Trace(String) Declaration public void Trace(string message) Parameters Type Name Description String message Warning(String) Declaration public void Warning(string message) Parameters Type Name Description String message Implements System.IDisposable"
  },
  "api/RageCoop.Core.Scripting.CustomEvents.html": {
    "href": "api/RageCoop.Core.Scripting.CustomEvents.html",
    "title": "Class CustomEvents | RageCoop resource documentation",
    "keywords": "Class CustomEvents Inheritance Object CustomEvents Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Core.Scripting Assembly : RageCoop.Core.dll Syntax public static class CustomEvents Methods Hash(String) Get a Int32 hash of a string. Declaration public static int Hash(string s) Parameters Type Name Description String s Returns Type Description Int32 Exceptions Type Condition ArgumentException The exception is thrown when the name did not match a previously computed one and the hash was the same."
  },
  "api/RageCoop.Core.Scripting.html": {
    "href": "api/RageCoop.Core.Scripting.html",
    "title": "Namespace RageCoop.Core.Scripting | RageCoop resource documentation",
    "keywords": "Namespace RageCoop.Core.Scripting Classes CustomEvents ResourceFile"
  },
  "api/RageCoop.Core.Scripting.ResourceFile.html": {
    "href": "api/RageCoop.Core.Scripting.ResourceFile.html",
    "title": "Class ResourceFile | RageCoop resource documentation",
    "keywords": "Class ResourceFile Inheritance Object ResourceFile Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Core.Scripting Assembly : RageCoop.Core.dll Syntax public class ResourceFile Properties GetStream Get a stream that can be used to read file content. Declaration public Func<Stream> GetStream { get; } Property Value Type Description Func < Stream > IsDirectory Whether this is a directory Declaration public bool IsDirectory { get; } Property Value Type Description Boolean Name Full name with relative path of this file Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/RageCoop.Core.Worker.html": {
    "href": "api/RageCoop.Core.Worker.html",
    "title": "Class Worker | RageCoop resource documentation",
    "keywords": "Class Worker A worker that constantly execute jobs in a background thread. Inheritance Object Worker Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Core Assembly : RageCoop.Core.dll Syntax public class Worker : IDisposable Properties IsBusy Whether this worker is busy executing job(s). Declaration public bool IsBusy { get; } Property Value Type Description Boolean Name Name of the worker Declaration public string Name { get; set; } Property Value Type Description String Methods Dispose() Finish current job and stop the worker. Declaration public void Dispose() QueueJob(Action) Queue a job to be executed Declaration public void QueueJob(Action work) Parameters Type Name Description Action work Stop() Finish current job and stop the worker. Declaration public void Stop() Implements System.IDisposable"
  },
  "api/RageCoop.Server.Client.html": {
    "href": "api/RageCoop.Server.Client.html",
    "title": "Class Client | RageCoop resource documentation",
    "keywords": "Class Client Represent a player connected to this server. Inheritance Object Client Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server Assembly : RageCoop.Server.dll Syntax public class Client Properties DisplayNameTag Gets or sets whether to enable automatic respawn for this client's main ped. Declaration public bool DisplayNameTag { get; set; } Property Value Type Description Boolean EnableAutoRespawn Gets or sets whether to enable automatic respawn for this client's main ped. Declaration public bool EnableAutoRespawn { get; set; } Property Value Type Description Boolean EndPoint Th client's IP address and port. Declaration public IPEndPoint EndPoint { get; } Property Value Type Description IPEndPoint IsReady Indicates whether the client has succefully loaded all resources. Declaration public bool IsReady { get; } Property Value Type Description Boolean Latency The client's latency in seconds. Declaration public float Latency { get; } Property Value Type Description Single Player The ServerPed instance representing the client's main character. Declaration public ServerPed Player { get; } Property Value Type Description ServerPed Username The client's username. Declaration public string Username { get; } Property Value Type Description String Methods Kick(String) Kick this client Declaration public void Kick(string reason = \"You have been kicked!\") Parameters Type Name Description String reason Kick(String[]) Kick this client Declaration public void Kick(params string[] reasons) Parameters Type Name Description String [] reasons Reasons to kick SendChatMessage(String, String) Send a chat messsage to this client, not visible to others. Declaration public void SendChatMessage(string message, string from = \"Server\") Parameters Type Name Description String message String from SendCustomEvent(Int32, Object[]) Trigger a CustomEvent for this client Declaration public void SendCustomEvent(int hash, params object[] args) Parameters Type Name Description Int32 hash An unique identifier of the event, you can use Hash(String) to get it from a string Object [] args Arguments SendCustomEventQueued(Int32, Object[]) Send a CustomEvent that'll be queued at client side and invoked from script thread Declaration public void SendCustomEventQueued(int hash, params object[] args) Parameters Type Name Description Int32 hash Object [] args SendNativeCall(Hash, Object[]) Send a native call to client and ignore it's response. Declaration public void SendNativeCall(Hash hash, params object[] args) Parameters Type Name Description GTA.Native.Hash hash Object [] args SendNativeCall<T>(Action<Object>, Hash, Object[]) Send a native call to client and do a callback when the response received. Declaration public void SendNativeCall<T>(Action<object> callBack, Hash hash, params object[] args) Parameters Type Name Description Action < Object > callBack GTA.Native.Hash hash Object [] args Type Parameters Name Description T Type of the response"
  },
  "api/RageCoop.Server.html": {
    "href": "api/RageCoop.Server.html",
    "title": "Namespace RageCoop.Server | RageCoop resource documentation",
    "keywords": "Namespace RageCoop.Server Classes Client Represent a player connected to this server. Server The instantiable RageCoop server class ServerSettings Settings for RageCoop Server"
  },
  "api/RageCoop.Server.Scripting.API.html": {
    "href": "api/RageCoop.Server.Scripting.API.html",
    "title": "Class API | RageCoop resource documentation",
    "keywords": "Class API An class that can be used to interact with RageCoop server. Inheritance Object API Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class API Fields Events Server side events Declaration public readonly ServerEvents Events Field Value Type Description ServerEvents Properties Entities All synchronized entities on this server. Declaration public ServerEntities Entities { get; } Property Value Type Description ServerEntities Host Gets or sets the client that is resposible for synchronizing time and weather Declaration public Client Host { get; set; } Property Value Type Description Client Logger Get a Logger that the server is currently using, you should use Logger to display resource-specific information. Declaration public Logger Logger { get; } Property Value Type Description Logger Methods GetAllClients() Get a list of all Clients Declaration public Dictionary<string, Client> GetAllClients() Returns Type Description Dictionary < String , Client > All clients as a dictionary indexed by NetID GetClientByUsername(String) Get the client by its username Declaration public Client GetClientByUsername(string username) Parameters Type Name Description String username The username to search for (non case-sensitive) Returns Type Description Client The Client from this user or null RegisterCommand(String, Action<CommandContext>) Register a new command chat command (Example: \"/test\") Declaration public void RegisterCommand(string name, Action<CommandContext> callback) Parameters Type Name Description String name The name of the command (Example: \"test\" for \"/test\") Action < CommandContext > callback A callback to invoke when the command received. RegisterCommand(String, String, Int16, Action<CommandContext>) Send CleanUpWorld to all players to delete all objects created by the server Declaration public void RegisterCommand(string name, string usage, short argsLength, Action<CommandContext> callback) Parameters Type Name Description String name The name of the command (Example: \"test\" for \"/test\") String usage How to use this message (argsLength required!) Int16 argsLength The length of args (Example: \"/message USERNAME MESSAGE\" = 2) (usage required!) Action < CommandContext > callback A callback to invoke when the command received. RegisterCommands(Object) Register all commands inside an class instance Declaration public void RegisterCommands(object obj) Parameters Type Name Description Object obj The instance of type containing the commands RegisterCommands<T>() Register all commands in a static class Declaration public void RegisterCommands<T>() Type Parameters Name Description T Your static class with commands RegisterCustomEventHandler(Int32, Action<CustomEventReceivedArgs>) Register an handler to the specifed event hash, one event can have multiple handlers. Declaration public void RegisterCustomEventHandler(int hash, Action<CustomEventReceivedArgs> handler) Parameters Type Name Description Int32 hash An unique identifier of the event, you can hash your event name with Hash(String) Action < CustomEventReceivedArgs > handler An handler to be invoked when the event is received from the server. RegisterCustomEventHandler(String, Action<CustomEventReceivedArgs>) Register an event handler for specified event name. Declaration public void RegisterCustomEventHandler(string name, Action<CustomEventReceivedArgs> handler) Parameters Type Name Description String name This value will be hashed to an int to reduce overhead Action < CustomEventReceivedArgs > handler The handler to be invoked when the event is received SendChatMessage(String, List<Client>, String) Send a chat message to all players, use SendChatMessage(String, String) to send to an individual client. Declaration public void SendChatMessage(string message, List<Client> targets = null, string username = \"Server\") Parameters Type Name Description String message The chat message List < Client > targets The clients to send message, leave it null to send to all clients String username The username which send this message (default = \"Server\") SendCustomEvent(List<Client>, Int32, Object[]) Send an event and data to the specified clients. Use SendCustomEvent(Int32, Object[]) if you want to send event to individual client. Declaration public void SendCustomEvent(List<Client> targets, int eventHash, params object[] args) Parameters Type Name Description List < Client > targets The target clients to send. Leave it null to send to all clients Int32 eventHash An unique identifier of the event, you can use Hash(String) to get it from a string Object [] args The objects conataing your data, see Args for supported types. SendCustomEventQueued(List<Client>, Int32, Object[]) Send a CustomEvent that'll be queued at client side and invoked from script thread Declaration public void SendCustomEventQueued(List<Client> targets, int eventHash, params object[] args) Parameters Type Name Description List < Client > targets Int32 eventHash Object [] args SendNativeCall(List<Client>, Hash, Object[]) Send native call specified clients. Declaration public void SendNativeCall(List<Client> clients, Hash hash, params object[] args) Parameters Type Name Description List < Client > clients Clients to send, null for all clients GTA.Native.Hash hash Object [] args"
  },
  "api/RageCoop.Server.Scripting.ChatEventArgs.html": {
    "href": "api/RageCoop.Server.Scripting.ChatEventArgs.html",
    "title": "Class ChatEventArgs | RageCoop resource documentation",
    "keywords": "Class ChatEventArgs Inheritance Object EventArgs ChatEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class ChatEventArgs : EventArgs Properties Message Message Declaration public string Message { get; set; } Property Value Type Description String Sender The client that sent this message Declaration public Client Sender { get; set; } Property Value Type Description Client"
  },
  "api/RageCoop.Server.Scripting.Command.html": {
    "href": "api/RageCoop.Server.Scripting.Command.html",
    "title": "Class Command | RageCoop resource documentation",
    "keywords": "Class Command Decorate your method with this attribute and use RegisterCommands<T>() or RegisterCommands(Object) to register commands. Inheritance Object Attribute Command Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax [AttributeUsage(AttributeTargets.Method, Inherited = false)] public class Command : Attribute Constructors Command(String) Declaration public Command(string name) Parameters Type Name Description String name Name of the command Properties ArgsLength Set the length of arguments (Example: 2 for \"/message USERNAME MESSAGE\". Usage required!) Declaration public short ArgsLength { get; set; } Property Value Type Description Int16 Name Sets name of the command Declaration public string Name { get; set; } Property Value Type Description String Usage Set the Usage (Example: \"Please use \"/help\"\". ArgsLength required!) Declaration public string Usage { get; set; } Property Value Type Description String"
  },
  "api/RageCoop.Server.Scripting.CommandContext.html": {
    "href": "api/RageCoop.Server.Scripting.CommandContext.html",
    "title": "Class CommandContext | RageCoop resource documentation",
    "keywords": "Class CommandContext The context containg command information. Inheritance Object CommandContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class CommandContext Properties Args Gets the arguments (Example: \"/message USERNAME MESSAGE\", Args[0] for USERNAME) Declaration public string[] Args { get; } Property Value Type Description String [] Client Gets the client which executed the command Declaration public Client Client { get; } Property Value Type Description Client"
  },
  "api/RageCoop.Server.Scripting.CustomEventReceivedArgs.html": {
    "href": "api/RageCoop.Server.Scripting.CustomEventReceivedArgs.html",
    "title": "Class CustomEventReceivedArgs | RageCoop resource documentation",
    "keywords": "Class CustomEventReceivedArgs Inheritance Object EventArgs CustomEventReceivedArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class CustomEventReceivedArgs : EventArgs Properties Args Supported types: byte, short, ushort, int, uint, long, ulong, float, bool, string, Vector3, Quaternion, Vector2 Handle Declaration public object[] Args { get; set; } Property Value Type Description Object [] Hash The event hash Declaration public int Hash { get; set; } Property Value Type Description Int32 Sender The Client that triggered this event Declaration public Client Sender { get; set; } Property Value Type Description Client"
  },
  "api/RageCoop.Server.Scripting.HandshakeEventArgs.html": {
    "href": "api/RageCoop.Server.Scripting.HandshakeEventArgs.html",
    "title": "Class HandshakeEventArgs | RageCoop resource documentation",
    "keywords": "Class HandshakeEventArgs Inheritance Object EventArgs HandshakeEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class HandshakeEventArgs : EventArgs Properties EndPoint The EndPoint that sent the handshake request. Declaration public IPEndPoint EndPoint { get; set; } Property Value Type Description IPEndPoint ID The player's ID Declaration public int ID { get; set; } Property Value Type Description Int32 PasswordHash The client password hashed with SHA256 algorithm. Declaration public string PasswordHash { get; set; } Property Value Type Description String Username The claimed username Declaration public string Username { get; set; } Property Value Type Description String Methods Deny(String) Deny the connection attempt Declaration public void Deny(string reason) Parameters Type Name Description String reason"
  },
  "api/RageCoop.Server.Scripting.html": {
    "href": "api/RageCoop.Server.Scripting.html",
    "title": "Namespace RageCoop.Server.Scripting | RageCoop resource documentation",
    "keywords": "Namespace RageCoop.Server.Scripting Classes API An class that can be used to interact with RageCoop server. ChatEventArgs Command Decorate your method with this attribute and use RegisterCommands<T>() or RegisterCommands(Object) to register commands. CommandContext The context containg command information. CustomEventReceivedArgs HandshakeEventArgs OnCommandEventArgs PedBlip Represent a blip attached to ped. ServerBlip A static blip owned by server. ServerEntities Manipulate entities from the server ServerEvents ServerObject Server-side object controller ServerPed Represents a ped from a client ServerProp Represents an prop owned by server. ServerResource A class representing a server side resource, each resource is isolated from another and will be started alongside the server. ServerScript Inherit from this class, constructor will be called automatically, but other scripts might have yet been loaded and API will be null, you should use OnStart() . to initiate your script. ServerVehicle Represents a vehicle from a client"
  },
  "api/RageCoop.Server.Scripting.OnCommandEventArgs.html": {
    "href": "api/RageCoop.Server.Scripting.OnCommandEventArgs.html",
    "title": "Class OnCommandEventArgs | RageCoop resource documentation",
    "keywords": "Class OnCommandEventArgs Inheritance Object EventArgs OnCommandEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class OnCommandEventArgs : EventArgs Properties Args Arguments Declaration public string[] Args { get; set; } Property Value Type Description String [] Cancel If this value was set to true, corresponding handler registered with RegisterCommand(String, Action<CommandContext>) will not be invoked. Declaration public bool Cancel { get; set; } Property Value Type Description Boolean Name The name of executed command Declaration public string Name { get; set; } Property Value Type Description String Sender The Client that executed this command. Declaration public Client Sender { get; set; } Property Value Type Description Client"
  },
  "api/RageCoop.Server.Scripting.PedBlip.html": {
    "href": "api/RageCoop.Server.Scripting.PedBlip.html",
    "title": "Class PedBlip | RageCoop resource documentation",
    "keywords": "Class PedBlip Represent a blip attached to ped. Inheritance Object PedBlip Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class PedBlip Properties Color Color of this blip Declaration public BlipColor Color { get; set; } Property Value Type Description GTA.BlipColor Ped Get the ServerPed that this blip attached to. Declaration public ServerPed Ped { get; } Property Value Type Description ServerPed Scale Scale of this blip Declaration public float Scale { get; set; } Property Value Type Description Single Sprite Sprite of this blip Declaration public BlipSprite Sprite { get; set; } Property Value Type Description GTA.BlipSprite"
  },
  "api/RageCoop.Server.Scripting.ServerBlip.html": {
    "href": "api/RageCoop.Server.Scripting.ServerBlip.html",
    "title": "Class ServerBlip | RageCoop resource documentation",
    "keywords": "Class ServerBlip A static blip owned by server. Inheritance Object ServerBlip Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class ServerBlip Properties Color Color of this blip Declaration public BlipColor Color { get; set; } Property Value Type Description GTA.BlipColor Handle Pass this as an argument in CustomEvent or NativeCall to convert this object to handle at client side. Declaration public Tuple<byte, byte[]> Handle { get; } Property Value Type Description Tuple < Byte , Byte []> ID Network ID (not handle!) Declaration public int ID { get; } Property Value Type Description Int32 Name Name of this blip Declaration public string Name { get; set; } Property Value Type Description String Position Position of this blip Declaration public Vector3 Position { get; set; } Property Value Type Description GTA.Math.Vector3 Rotation Rotation of this blip Declaration public int Rotation { get; set; } Property Value Type Description Int32 Scale Scale of this blip Declaration public float Scale { get; set; } Property Value Type Description Single Sprite Sprite of this blip Declaration public BlipSprite Sprite { get; set; } Property Value Type Description GTA.BlipSprite Methods Delete() Delete this blip Declaration public void Delete()"
  },
  "api/RageCoop.Server.Scripting.ServerEntities.html": {
    "href": "api/RageCoop.Server.Scripting.ServerEntities.html",
    "title": "Class ServerEntities | RageCoop resource documentation",
    "keywords": "Class ServerEntities Manipulate entities from the server Inheritance Object ServerEntities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class ServerEntities Methods CreateBlip(Vector3, Int32) Create a static ServerBlip owned by server. Declaration public ServerBlip CreateBlip(Vector3 pos, int rotation) Parameters Type Name Description GTA.Math.Vector3 pos Int32 rotation Returns Type Description ServerBlip CreateProp(Model, Vector3, Vector3) Create a static prop owned by server. Declaration public ServerProp CreateProp(Model model, Vector3 pos, Vector3 rot) Parameters Type Name Description GTA.Model model GTA.Math.Vector3 pos GTA.Math.Vector3 rot Returns Type Description ServerProp CreateVehicle(Client, Model, Vector3, Single) Create a vehicle Declaration public ServerVehicle CreateVehicle(Client owner, Model model, Vector3 pos, float heading) Parameters Type Name Description Client owner Owner of this vehicle GTA.Model model model GTA.Math.Vector3 pos position Single heading heading of this vehicle Returns Type Description ServerVehicle GetAllBlips() Get all blips owned by server Declaration public ServerBlip[] GetAllBlips() Returns Type Description ServerBlip [] GetAllPeds() Get all peds on this server Declaration public ServerPed[] GetAllPeds() Returns Type Description ServerPed [] GetAllProps() Get all static prop objects owned by server Declaration public ServerProp[] GetAllProps() Returns Type Description ServerProp [] GetAllVehicles() Get all vehicles on this server Declaration public ServerVehicle[] GetAllVehicles() Returns Type Description ServerVehicle [] GetBlipByID(Int32) Get a ServerBlip by it's id. Declaration public ServerBlip GetBlipByID(int id) Parameters Type Name Description Int32 id Returns Type Description ServerBlip GetPedByID(Int32) Get a ServerPed by it's id Declaration public ServerPed GetPedByID(int id) Parameters Type Name Description Int32 id Returns Type Description ServerPed GetPropByID(Int32) Get a ServerProp owned by server from it's ID. Declaration public ServerProp GetPropByID(int id) Parameters Type Name Description Int32 id Returns Type Description ServerProp GetVehicleByID(Int32) Get a ServerVehicle by it's id Declaration public ServerVehicle GetVehicleByID(int id) Parameters Type Name Description Int32 id Returns Type Description ServerVehicle"
  },
  "api/RageCoop.Server.Scripting.ServerEvents.html": {
    "href": "api/RageCoop.Server.Scripting.ServerEvents.html",
    "title": "Class ServerEvents | RageCoop resource documentation",
    "keywords": "Class ServerEvents Inheritance Object ServerEvents Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class ServerEvents Events OnChatMessage Invoked when a chat message is received. Declaration public event EventHandler<ChatEventArgs> OnChatMessage Event Type Type Description EventHandler < ChatEventArgs > OnCommandReceived Will be invoked from main thread before registered handlers Declaration public event EventHandler<OnCommandEventArgs> OnCommandReceived Event Type Type Description EventHandler < OnCommandEventArgs > OnPlayerConnected Will be invoked when a player is connected, but this player might not be ready yet(client resources not loaded), using OnPlayerReady is recommended. Declaration public event EventHandler<Client> OnPlayerConnected Event Type Type Description EventHandler < Client > OnPlayerDisconnected Invoked when a player disconnected, all method won't be effective in this scope. Declaration public event EventHandler<Client> OnPlayerDisconnected Event Type Type Description EventHandler < Client > OnPlayerHandshake Will be invoked from main thread when a client is attempting to connect, use Deny(String) to deny the connection request. Declaration public event EventHandler<HandshakeEventArgs> OnPlayerHandshake Event Type Type Description EventHandler < HandshakeEventArgs > OnPlayerReady Will be invoked after the client connected and all resources(if any) have been loaded. Declaration public event EventHandler<Client> OnPlayerReady Event Type Type Description EventHandler < Client > OnPlayerUpdate Invoked everytime a player's main ped has been updated Declaration public event EventHandler<Client> OnPlayerUpdate Event Type Type Description EventHandler < Client >"
  },
  "api/RageCoop.Server.Scripting.ServerObject.html": {
    "href": "api/RageCoop.Server.Scripting.ServerObject.html",
    "title": "Class ServerObject | RageCoop resource documentation",
    "keywords": "Class ServerObject Server-side object controller Inheritance Object ServerObject ServerPed ServerProp ServerVehicle Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public abstract class ServerObject Properties Handle Pass this as an argument in CustomEvent or NativeCall to convert this object to handle at client side. Declaration public Tuple<byte, byte[]> Handle { get; } Property Value Type Description Tuple < Byte , Byte []> ID Network ID of this object. Declaration public int ID { get; } Property Value Type Description Int32 Model The object's model Declaration public Model Model { get; } Property Value Type Description GTA.Model Owner The client that owns this object, null if it's owned by server. Declaration public Client Owner { get; } Property Value Type Description Client Position Gets or sets this object's position Declaration public virtual Vector3 Position { get; set; } Property Value Type Description GTA.Math.Vector3 Rotation Gets or sets this object's rotation Declaration public virtual Vector3 Rotation { get; set; } Property Value Type Description GTA.Math.Vector3 Methods Delete() Send updated information to clients, would be called automatically. Declaration public virtual void Delete() Freeze(Boolean) Freeze this object, will throw an exception if it's a ServerProp. Declaration public virtual void Freeze(bool toggle) Parameters Type Name Description Boolean toggle Exceptions Type Condition InvalidOperationException"
  },
  "api/RageCoop.Server.Scripting.ServerPed.html": {
    "href": "api/RageCoop.Server.Scripting.ServerPed.html",
    "title": "Class ServerPed | RageCoop resource documentation",
    "keywords": "Class ServerPed Represents a ped from a client Inheritance Object ServerObject ServerPed Inherited Members ServerObject.Handle ServerObject.Owner ServerObject.ID ServerObject.Model ServerObject.Position ServerObject.Rotation ServerObject.Delete() ServerObject.Freeze(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class ServerPed : ServerObject Properties AttachedBlip Get the PedBlip attached to this ped. Declaration public PedBlip AttachedBlip { get; } Property Value Type Description PedBlip Health Health Declaration public int Health { get; } Property Value Type Description Int32 LastVehicle Get the ped's last vehicle Declaration public ServerVehicle LastVehicle { get; } Property Value Type Description ServerVehicle Methods AddBlip() Attach a blip to this ped. Declaration public PedBlip AddBlip() Returns Type Description PedBlip"
  },
  "api/RageCoop.Server.Scripting.ServerProp.html": {
    "href": "api/RageCoop.Server.Scripting.ServerProp.html",
    "title": "Class ServerProp | RageCoop resource documentation",
    "keywords": "Class ServerProp Represents an prop owned by server. Inheritance Object ServerObject ServerProp Inherited Members ServerObject.Handle ServerObject.Owner ServerObject.ID ServerObject.Model ServerObject.Freeze(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class ServerProp : ServerObject Properties Position Gets or sets this object's position Declaration public override Vector3 Position { get; set; } Property Value Type Description GTA.Math.Vector3 Overrides ServerObject.Position Rotation Gets or sets this object's rotation Declaration public override Vector3 Rotation { get; set; } Property Value Type Description GTA.Math.Vector3 Overrides ServerObject.Rotation Methods Delete() Delete this prop Declaration public override void Delete() Overrides ServerObject.Delete()"
  },
  "api/RageCoop.Server.Scripting.ServerResource.html": {
    "href": "api/RageCoop.Server.Scripting.ServerResource.html",
    "title": "Class ServerResource | RageCoop resource documentation",
    "keywords": "Class ServerResource A class representing a server side resource, each resource is isolated from another and will be started alongside the server. Inheritance Object McMaster.NETCore.Plugins.PluginLoader ServerResource Implements IDisposable Inherited Members McMaster.NETCore.Plugins.PluginLoader.CreateFromAssemblyFile(System.String, System.Boolean, System.Type[]) McMaster.NETCore.Plugins.PluginLoader.CreateFromAssemblyFile(System.String, System.Boolean, System.Type[], System.Action<McMaster.NETCore.Plugins.PluginConfig>) McMaster.NETCore.Plugins.PluginLoader.CreateFromAssemblyFile(System.String, System.Type[]) McMaster.NETCore.Plugins.PluginLoader.CreateFromAssemblyFile(System.String, System.Type[], System.Action<McMaster.NETCore.Plugins.PluginConfig>) McMaster.NETCore.Plugins.PluginLoader.CreateFromAssemblyFile(System.String) McMaster.NETCore.Plugins.PluginLoader.CreateFromAssemblyFile(System.String, System.Action<McMaster.NETCore.Plugins.PluginConfig>) McMaster.NETCore.Plugins.PluginLoader.Reload() McMaster.NETCore.Plugins.PluginLoader.LoadDefaultAssembly() McMaster.NETCore.Plugins.PluginLoader.LoadAssembly(System.Reflection.AssemblyName) McMaster.NETCore.Plugins.PluginLoader.LoadAssemblyFromPath(System.String) McMaster.NETCore.Plugins.PluginLoader.LoadAssembly(System.String) McMaster.NETCore.Plugins.PluginLoader.EnterContextualReflection() McMaster.NETCore.Plugins.PluginLoader.Dispose() McMaster.NETCore.Plugins.PluginLoader.IsUnloadable McMaster.NETCore.Plugins.PluginLoader.Reloaded Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class ServerResource : PluginLoader, IDisposable Fields Logger Get a Logger instance that can be used to show information in console. Declaration public Logger Logger Field Value Type Description Logger Properties DataFolder A resource-specific folder that can be used to store your files. Declaration public string DataFolder { get; } Property Value Type Description String Files Get all ResourceFile that can be used to acces files in this resource Declaration public Dictionary<string, ResourceFile> Files { get; } Property Value Type Description Dictionary < String , ResourceFile > Name Name of the resource Declaration public string Name { get; } Property Value Type Description String Scripts Get all ServerScript instance in this resource Declaration public List<ServerScript> Scripts { get; } Property Value Type Description List < ServerScript > Implements System.IDisposable"
  },
  "api/RageCoop.Server.Scripting.ServerScript.html": {
    "href": "api/RageCoop.Server.Scripting.ServerScript.html",
    "title": "Class ServerScript | RageCoop resource documentation",
    "keywords": "Class ServerScript Inherit from this class, constructor will be called automatically, but other scripts might have yet been loaded and API will be null, you should use OnStart() . to initiate your script. Inheritance Object ServerScript Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public abstract class ServerScript Properties API Get the API instance that can be used to control the server. Declaration public API API { get; set; } Property Value Type Description API CurrentFile Get the ResourceFile that the script belongs to. Declaration public ResourceFile CurrentFile { get; } Property Value Type Description ResourceFile CurrentResource Get the ServerResource this script belongs to, this property won't be initiated before OnStart() . Declaration public ServerResource CurrentResource { get; } Property Value Type Description ServerResource Methods OnStart() This method would be called from listener thread after all scripts have been loaded. Declaration public abstract void OnStart() OnStop() This method would be called from listener thread when the server is shutting down, you MUST terminate all background jobs/threads in this method. Declaration public abstract void OnStop()"
  },
  "api/RageCoop.Server.Scripting.ServerVehicle.html": {
    "href": "api/RageCoop.Server.Scripting.ServerVehicle.html",
    "title": "Class ServerVehicle | RageCoop resource documentation",
    "keywords": "Class ServerVehicle Represents a vehicle from a client Inheritance Object ServerObject ServerVehicle Inherited Members ServerObject.Handle ServerObject.Owner ServerObject.ID ServerObject.Model ServerObject.Position ServerObject.Delete() ServerObject.Freeze(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server.Scripting Assembly : RageCoop.Server.dll Syntax public class ServerVehicle : ServerObject Properties Quaternion Get this vehicle's quaternion Declaration public Quaternion Quaternion { get; set; } Property Value Type Description GTA.Math.Quaternion Rotation Gets or sets vehicle rotation Declaration public override Vector3 Rotation { get; set; } Property Value Type Description GTA.Math.Vector3 Overrides ServerObject.Rotation"
  },
  "api/RageCoop.Server.Server.html": {
    "href": "api/RageCoop.Server.Server.html",
    "title": "Class Server | RageCoop resource documentation",
    "keywords": "Class Server The instantiable RageCoop server class Inheritance Object Server Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server Assembly : RageCoop.Server.dll Syntax public class Server Constructors Server(ServerSettings, Logger) Instantiate a server. Declaration public Server(ServerSettings settings, Logger logger = null) Parameters Type Name Description ServerSettings settings Logger logger Exceptions Type Condition ArgumentNullException Properties API The API for controlling server and hooking events. Declaration public API API { get; } Property Value Type Description API Methods Start() Spawn threads and start the server Declaration public void Start() Stop() Terminate threads and stop the server Declaration public void Stop()"
  },
  "api/RageCoop.Server.ServerSettings.html": {
    "href": "api/RageCoop.Server.ServerSettings.html",
    "title": "Class ServerSettings | RageCoop resource documentation",
    "keywords": "Class ServerSettings Settings for RageCoop Server Inheritance Object ServerSettings Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : RageCoop.Server Assembly : RageCoop.Server.dll Syntax public class ServerSettings Properties AnnounceSelf Whether or not to announce this server so it'll appear on server list. Declaration public bool AnnounceSelf { get; set; } Property Value Type Description Boolean Description The description to be shown on master server Declaration public string Description { get; set; } Property Value Type Description String GameMode The game mode to be shown on master server Declaration public string GameMode { get; set; } Property Value Type Description String Language The language to be shown on master server Declaration public string Language { get; set; } Property Value Type Description String LogLevel See LogLevel . Declaration public int LogLevel { get; set; } Property Value Type Description Int32 MasterServer Master server address, mostly doesn't need to be changed. Declaration public string MasterServer { get; set; } Property Value Type Description String MaxLatency Maximum latency allowed for a client, a client will be kicked if it's latency it's higher than this value Declaration public int MaxLatency { get; set; } Property Value Type Description Int32 MaxPlayers Maximum number of players on this server Declaration public int MaxPlayers { get; set; } Property Value Type Description Int32 Name The server name to be shown on master server Declaration public string Name { get; set; } Property Value Type Description String NpcStreamingDistance NPC data won't be sent to a player if their distance is greater than this value. -1 for unlimited. Declaration public float NpcStreamingDistance { get; set; } Property Value Type Description Single PlayerStreamingDistance Player's data won't be sent to another player if their distance is greater than this value. -1 for unlimited. Declaration public float PlayerStreamingDistance { get; set; } Property Value Type Description Single Port Port to listen for incoming connections Declaration public int Port { get; set; } Property Value Type Description Int32 TimeSync If enabled, all clients will have same time as host Declaration public bool TimeSync { get; set; } Property Value Type Description Boolean WeatherSync If enabled, all clients will have same weather as host Declaration public bool WeatherSync { get; set; } Property Value Type Description Boolean Website The website address to be shown on master server Declaration public string Website { get; set; } Property Value Type Description String WelcomeMessage The message to send when a client connected (not visible to others) Declaration public string WelcomeMessage { get; set; } Property Value Type Description String"
  },
  "index.html": {
    "href": "index.html",
    "title": "Getting started | RageCoop resource documentation",
    "keywords": "Getting started Resources and Scripts A Script stands for class that inherits from RageCoop's script class ( ServerScript and ClientScript ) and will be loaded at runtime, one assembly can have multiple scripts in it. A Resource consists of one or more assemblies and other files. Server-side resource will be loaded at startup and is isolated from other resources, while client-side resource will be sent to each client and loaded after they connected to the server. A Resource can either be in a folder or packed inside a zip archive. Directory structure Below is the server's directory structure ServerRoot │ Settings.xml | RageCoop.Server.exe │ └───Resources └───Server │ │ RageCoop.Resources.Management.zip │ │ RageCoop.Resources.Race.zip │ │ │ │───Client │ │ RageCoop.Resources.Race.Client.zip │ │ │ └───Temp Settings.xml This file will be generated first time you started the server, you can then change the server's configuration option by editing it, refer to ServerSettings for detailed description. Server Resource Create a C# class library project targeting .NET 6.0. Add reference to RageCoop.Server.dll and RageCoop.Core.dll . Add following namespace(s): using RageCoop.Server.Scripting; // Optional using RageCoop.Server; using RageCoop.Core.Scripting; using RageCoop.Core; Inherit from ServerScript . Implement OnStart() and OnStop() , your cs file should look like this: using RageCoop.Server.Scripting; namespace NiceGuy.MyFirstResource { public class Main : ServerScript { public override void OnStart() { // Initiate your script here } public override void OnStop() { // Free all resources and perform cleanup } } } Now you can have some fun by using the API instance, please refer to the GitHub repo for more examples. For convenience, you can create a symlink in ServerRoot/Resources/Server/NiceGuy.MyFirstResource targeting your output folder: mklink /d ServerRoot/Resources/Server/NiceGuy.MyFirstResource C:/MyRepos/NiceGuy.MyFirstResource/bin/Debug That's it! Start your server and you should see your resource loading. Client Resource Create a C# class library project targeting .NET Framework 4.8. Add reference to RageCoop.Client.dll and RageCoop.Core.dll . Add following namespace(s): using RageCoop.Client.Scripting; // Optional using RageCoop.Core.Scripting; using RageCoop.Core; Inherit from ClientScript . Implement OnStart() and OnStop() , your cs file should look like this: using RageCoop.Server.Scripting; namespace NiceGuy.MyFirstClientResource { public class Main : ClientScript { public override void OnStart() { // Initiate your script here } public override void OnStop() { // Free all resources and perform cleanup } } } Now you can use anything from SHVDN to control client behaviour by adding a reference to ScriptHookVDotNet3.dll For convenience, you can create a symlink in ServerRoot/Resources/Client/NiceGuy.MyFirstResource targeting your output folder: mklink /d ServerRoot/Resources/Client/NiceGuy.MyFirstClientResource C:/MyRepos/NiceGuy.MyFirstClientResource/bin/Debug That's it! When a client connects the resource will be sent and loaded at client side."
  },
  "README.html": {
    "href": "README.html",
    "title": "🌐 RAGECOOP | RageCoop resource documentation",
    "keywords": "🌐 RAGECOOP 🧠 That's it RAGECOOP is a multiplayer mod to play story mode or some mods made for RAGECOOP or just drive around with your buddy. Old name: GTACOOP:R 📋 Requirements Visual Studio 2022 .NET 6.0 .NET Framework 4.8 📚 Libraries ScriptHookVDotNet3 LemonUI.SHVDN3 Lidgren Network Custom ( PRIVATE ) No new features (only improvements) Newtonsoft.Json ClearScript SharpZipLib DotNetCorePlugins Features Synchronized bullets Synchronized vehicle/player/NPC Synchronized projectiles Simple ragdoll sync Smoother vehicle/ped movement. Ownership based sync logic, carjacking is now working (sort of). Introduced SyncEvents. Code refactoring and namespace cleanup Synchronized vehicle doors, brake and throttle. Weaponized vehicle sync(WIP). Other improvements Known issues Weapon sounds are missing. Cover sync is still buggy. Framerate drop with high number of synchronized entities. Scripting API is screwed.(will be rewritten in the future) Installation Refer to the wiki Downloads Download latest release here You can also download nightly builds here , which includes latest features and bug-fixes, but has not been thoroughly tested. Please note that this is incompatible with all previous versions of ragecoop, remove old files before installing. Support us 🦆 Special thanks to Makinolo , oldnapalm For testing, ideas, contributions and the first modification with the API crosire For the extensive work in ScriptHookVDotNet justalemon For the extensive work in LemonUI 📝 License This project is licensed under MIT license"
  }
}